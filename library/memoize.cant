;; Return a memoized version of a function

(make not-yet)

(to (memoize f)
  (let memos (!map<-))
  (to (memoized @arguments)
    ;; TODO what's the performance of turning this into a one-liner:
    ;; (memos .get-set! arguments (: (f @arguments)))
    ;; except of course .get-set! isn't quite the thing.
    (let recalled (memos .get arguments not-yet))
    (if (= recalled not-yet)
        (hey (f @arguments)
             (-> (memos .set! arguments it)))
        recalled)))

(export memoize)
